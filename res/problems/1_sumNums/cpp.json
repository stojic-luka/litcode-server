{
    "user_code": [
        "class Solution {",
        "public:",
        "\tint sumNumbers(int num1, int num2) {",
        "\t\t",
        "\t\treturn ;",
        "\t}",
        "};"
    ],
    "default_code": [
        "#include <fstream>",
        "#include <iostream>",
        "#include <string>",
        "#include <vector>",
        "",
        "",
        "int main() {",
        "\tstd::ofstream f(\"user.out\", std::ios::app);",
        "\tstd::vector<std::vector<int>> args = {{1, 3}, {3, 5}, {7, 9}};",
        "\tstd::vector<int> expected = {4, 8, 16};",
        "\ttry {",
        "\t\tfor (int i = 0; i < args.size(); ++i) {",
        "\t\t\tint value = Solution().sumNumbers(args[i][0], args[i][1]);",
        "\t\t\tif (typeid(value) != typeid(int))",
        "\t\t\t\tthrow std::invalid_argument(std::to_string(value) + \" is not valid value for the expected return type int\");",
        "\t\t\tif (value != expected[i])",
        "\t\t\t\tthrow std::runtime_error(\"Expected value of \" + std::to_string(expected[i]) + \", but got \" + std::to_string(value));",
        "\t\t\tf << value << std::endl;",
        "\t\t}",
        "\t} catch (std::exception &e) {",
        "\t\tthrow e;",
        "\t}",
        "\treturn 0;",
        "}"
    ],
    "main_file_extention": ".cpp",
    "insert_on_row": 5,
    "return_type": "int",
    "test_values": [
        ["1", "3"],
        ["3", "5"],
        ["7", "9"]
    ],
    "expected_values": [
        "4",
        "8",
        "16"
    ]
}